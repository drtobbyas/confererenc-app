{"version":3,"sources":["components/talks.component.js","components/add-talk.component.js","components/add-attendee.component.js","components/dashboard.component.js","App.js","theme.js","index.js","../../config/index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","minWidth","width","expansionPanel","formControl","details","display","justifyContent","Talks","props","classes","useState","talks","message","open","state","setState","getTalks","a","async","fetch","REACT_API_URL","response","json","res","statusCode","data","reverse","console","log","useEffect","List","className","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","map","talk","ListItem","key","_id","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore","aria-controls","id","Typography","heading","title","ExpansionPanelDetails","description","Button","variant","color","button","onClick","e","preventDefault","JSON","stringify","headers","accept","method","body","AddTalk","talkData","handleChange","prop","target","value","Box","onSubmit","FormControl","TextField","label","placeholder","onChange","required","rowsMax","aria-label","type","AddAttendee","attendeeData","attending","callApi","Select","defaultValue","MenuItem","TabPanel","children","index","other","component","role","hidden","aria-labelledby","p","flexGrow","backgroundColor","palette","background","paper","padding","breakpoints","down","flexDirection","marginLeft","marginRight","Dashboard","React","setValue","Paper","Tabs","event","newValue","Tab","header","primary","main","grid","App","createMuiTheme","Toolbar","Grid","container","item","xs","secondary","error","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector","require","module","exports","PORT","MONGODB_URL"],"mappings":"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","file":"static/js/main.0cb35c67.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Paper,\n  List,\n  ListItem,\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  Typography,\n  Snackbar,\n  Button,\n  Box,\n  TextareaAutosize,\n  TextField,\n  FormControl,\n} from \"@material-ui/core\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport { REACT_API_URL } from \"../../../config/index\";\n\nconst useStyles = makeStyles(theme => ({\n\n  // base: {\n  //   display: \"flex\",\n  //   justifyContent: \"center\"\n  // },\n\n  root: {\n    margin: theme.spacing(1),\n    minWidth: 200,\n    width: '100%',\n    // [theme.breakpoints.up('sm')]: {\n    //   width: '50%'\n    // }\n  },\n  expansionPanel: {\n    width: '100%',\n    minWidth: 200,\n  },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 100,\n      width: '100%',\n    },\n    details: {\n      display: 'flex',\n      justifyContent: 'space-between',\n    }\n\n}));\n\nexport const Talks = props => {\n  const classes = useStyles();\n  // const { talks } = props;\n  const [state, setState] = useState({\n    talks: [\n\n    ],\n    message: '',\n    open: false\n  });\n\n  const getTalks = async () => {\n    try {\n      const response = await fetch(`${REACT_API_URL}/api/talks/getTalks`);\n      const res = await response.json();\n      if (res.statusCode && res.statusCode === 200) {\n        return setState({\n          ...state,\n          talks: res.data.reverse()\n        });\n      }\n      return setState({\n        ...state,\n        talks: []\n      });\n\n    } catch (error) {\n      console.log(`unable to fetch data: error: ${error}`);\n     return setState({\n        ...state,\n        talks: []\n      });\n    }\n  };\n\n\n  useEffect(() => {\n\n    getTalks();\n  }, []);\n\n  const handleClose = () =>{\n    setState({\n      ...state,\n      open:false\n    })\n  }\n\n  const deleteTalk = (_id) => async (e) => {\n    e.preventDefault()\n    try {\n      const data = JSON.stringify({\n        _id: _id\n      })\n      const response = await fetch(`${REACT_API_URL}/api/talks/deleteTalk`, {\n        headers: {\n          accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: data\n      });\n      const res = await response.json();\n      if (res.statusCode && res.statusCode === 200) {\n        getTalks();\n        return setState({\n          ...state,\n          open: true,\n          message: 'talk deleted successfully'\n        });\n      }\n      return setState({\n        ...state,\n        open: true,\n        message: 'unable to delete talk'\n      });\n\n    } catch (error) {\n      console.log(`unable to fetch data: error: ${error}`);\n     return setState({\n        ...state,\n        open: true,\n        message: 'error deleting talk'\n      });\n    }\n  }\n\n  return (\n    // <Paper className={classNames(classes.root, classes.base)}>\n      <List className={classes.root}>\n        <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={state.open}\n        autoHideDuration={6000}\n        message={state.message}\n        onClose={handleClose}\n      />\n        {state.talks.map(talk => {\n          return (\n            <ListItem key={talk._id}>\n              <ExpansionPanel className={classes.expansionPanel}>\n                <ExpansionPanelSummary\n                  expandIcon={<ExpandMore />}\n                  aria-controls=\"panel1a-content\"\n                  id=\"panel1a-header\"\n                >\n                  <Typography className={classes.heading}>\n                    {talk.title}\n                  </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.details}>\n                <Typography className={classes.heading}>\n                    Desctiption:\n                  </Typography>\n          <Typography>{talk.description}</Typography>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            onClick={deleteTalk(talk._id)}\n          >\n            Delete Talk\n          </Button>\n                </ExpansionPanelDetails>\n              </ExpansionPanel>\n            </ListItem>\n          );\n        })}\n      </List>\n    // </Paper>\n  );\n};\n\n// const TalkDetails = (props) => {\n\n//   const { talk } = props\n//   return (\n//     <Box>\n//       <FormControl className={classes.formControl}>\n//         <TextField\n//           id=\"title\"\n//           label=\"title\"\n//           defaultValue=\"Talk Title\"\n//           variant=\"outlined\"\n//         />{\" \"}\n//       </FormControl>\n\n//       <FormControl className={classes.formControl}>\n//         <TextField\n//           rowsMax={4}\n//           aria-label=\"Description\"\n//           placeholder=\"Description\"\n//           defaultValue=\"Description\"\n//         />{\" \"}\n//       </FormControl>\n\n//       <FormControl className={classes.formControl}>\n//         <TextField\n//           id=\"host\"\n//           label=\"host\"\n//           defaultValue=\"Talk host\"\n//           variant=\"outlined\"\n//         />{\" \"}\n//       </FormControl>\n\n//       <FormControl className={classes.formControl}>\n//         <TextField\n//           id=\"speakers\"\n//           label=\"speakers\"\n//           defaultValue=\"Talk speakers\"\n//           variant=\"outlined\"\n//         />{\" \"}\n//       </FormControl>\n\n//       <FormControl className={classes.formControl}>\n//         <TextField\n//           id=\"address\"\n//           label=\"address\"\n//           defaultValue=\"Talk address\"\n//           variant=\"outlined\"\n//         />\n//       </FormControl>\n\n\n\n//       <FormControl className={classes.formControl}>\n//         <TextField\n//           id=\"start time\"\n//           label=\"start time\"\n//           defaultValue=\"Talk start Time\"\n//           variant=\"outlined\"\n//         />{\" \"}\n//       </FormControl>\n\n//       <FormControl className={classes.formControl}>\n//         <TextField\n//           id=\"closing time\"\n//           label=\"closing time\"\n//           defaultValue=\"Talk closing Time\"\n//           variant=\"outlined\"\n//         />{\" \"}\n//       </FormControl>\n//       <FormControl className={classes.formControl}>\n//         <TextField\n//           id=\"title\"\n//           label=\"attendees\"\n//           defaultValue=\"Talk attendees\"\n//           variant=\"outlined\"\n//         />{\" \"}\n//       </FormControl>\n//     </Box>\n//   );\n// }\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  FormControl,\n  TextField,\n  Snackbar,\n  Button\n} from \"@material-ui/core\";\nimport { REACT_API_URL } from \"../../../config/index\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 100,\n    width: \"100%\",\n    // [theme.breakpoints.up(\"sm\")]: {\n    //   width: \"50%\"\n    // }\n  }\n}));\n\nexport const AddTalk = () => {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    open: false,\n    message: \"\",\n    talkData: {}\n  });\n\n  const addTalk = async e => {\n    e.preventDefault();\n    try {\n      const data = JSON.stringify(state.talkData);\n      console.log(data);\n      const response = await fetch(`${REACT_API_URL}/api/talks/addTalk`, {\n        headers: {\n          accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: data\n      });\n      const res = await response.json();\n      console.log(res)\n      if (res.statusCode && res.statusCode === 200) {\n        return setState({\n          ...state,\n          open: true,\n          message: \"talk added\"\n        });\n      }\n      console.log(res);\n     return setState({\n        ...state,\n        open: true,\n        message: \"error adding talk\"\n      });\n    } catch (error) {\n      console.log(`error adding talk, error: ${error}`);\n      setState({\n        ...state,\n        open: true,\n        message: \"unable to add talk\"\n      });\n    }\n  };\n\n  const handleChange = prop => e => {\n    e.preventDefault();\n    setState({\n      ...state,\n      talkData: {\n        ...state.talkData,\n        [prop]: e.target.value\n      }\n    });\n  };\n\n  const handleClose = () =>{\n    setState({\n      ...state,\n      open:false\n    })\n  }\n\n  return (\n    <Box className={classes.root}>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={state.open}\n        autoHideDuration={6000}\n        message={state.message}\n        onClose={handleClose}\n      />\n      <form onSubmit={addTalk}>\n        {\" \"}\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"title\"\n            label=\"title\"\n            placeholder=\"Talk Title\"\n            variant=\"outlined\"\n            onChange={handleChange(\"title\")}\n            required\n          />{\" \"}\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            rowsMax={4}\n            aria-label=\"Description\"\n            placeholder=\"Description\"\n            onChange={handleChange(\"description\")}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"host\"\n            label=\"host\"\n            placeholder=\"Talk host\"\n            variant=\"outlined\"\n            onChange={handleChange(\"host\")}\n          />{\" \"}\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"address\"\n            label=\"address\"\n            placeholder=\"location of the Talk\"\n            variant=\"outlined\"\n            onChange={handleChange(\"address\")}\n            required\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"start time\"\n            label=\"start time\"\n            placeholder=\"2018-11-28\"\n            variant=\"outlined\"\n            onChange={handleChange(\"startsAt\")}\n            required\n          />{\" \"}\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"closing time\"\n            label=\"closing time\"\n            placeholder=\"2018-11-28\"\n            variant=\"outlined\"\n            onChange={handleChange(\"endsAt\")}\n            required\n          />{\" \"}\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            type=\"submit\"\n          >\n            Create Talk\n          </Button>\n        </FormControl>\n      </form>\n    </Box>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  FormControl,\n  TextField,\n  Snackbar,\n  Button,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { REACT_API_URL } from \"../../../config/index\";\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 100,\n    width: \"100%\",\n    // [theme.breakpoints.up(\"sm\")]: {\n    //   width: \"50%\"\n    // }\n  }\n}));\n\nexport const AddAttendee = () => {\n  const classes = useStyles();\n\n  const [state, setState] = useState({\n    open: false,\n    message: \"\",\n    attendeeData: {\n      attending: ''\n    },\n    talks: []\n  });\n\n  useEffect(() => {\n    const callApi = async () => {\n      try {\n        const response = await fetch(`${REACT_API_URL}/api/talks/getTalks`);\n        const res = await response.json();\n        if (res.statusCode && res.statusCode === 200) {\n          return setState({\n            ...state,\n            talks: res.data\n          });\n        }\n        return setState({\n          ...state,\n          talks: []\n        });\n\n      } catch (error) {\n        console.log(`unable to fetch data: error: ${error}`);\n       return setState({\n          ...state,\n          talks: []\n        });\n      }\n    };\n\n    callApi();\n  }, []);\n\n\n  const addAttendee = async e => {\n    e.preventDefault();\n    try {\n      const data = JSON.stringify(state.attendeeData);\n      console.log(data);\n      const response = await fetch(`${REACT_API_URL}/api/attendees/addAttendee`, {\n        headers: {\n          accept: \"application/json, text/plain, */*\",\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: data\n      });\n      const res = await response.json();\n      console.log(res)\n      if (res.statusCode && res.statusCode === 200) {\n        return setState({\n          ...state,\n          open: true,\n          message: \"talk attendee\"\n        });\n      }\n      console.log(res);\n     return setState({\n        ...state,\n        open: true,\n        message: \"error adding attendee\"\n      });\n    } catch (error) {\n      console.log(`error adding attendee, error: ${error}`);\n      setState({\n        ...state,\n        open: true,\n        message: \"unable to add attendee\"\n      });\n    }\n  };\n\n  const handleChange = prop => e => {\n    e.preventDefault();\n    setState({\n      ...state,\n      attendeeData: {\n        ...state.attendeeData,\n        [prop]: e.target.value\n      }\n    });\n  };\n\n  const handleSelect = prop => e => {\n    e.preventDefault();\n    setState({\n      ...state,\n      attendeeData: {\n        ...state.attendeeData,\n        attending: [e.target.value]\n      }\n    });\n  }\n\n  const handleClose = () =>{\n    setState({\n      ...state,\n      open:false\n    })\n  }\n\n  return (\n    <Box className={classes.root}>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={state.open}\n        autoHideDuration={6000}\n        message={state.message}\n        onClose={handleClose}\n      />\n      <form onSubmit={addAttendee}>\n\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"first-name\"\n            label=\"first-name\"\n            placeholder=\"First Name\"\n            variant=\"outlined\"\n            onChange={handleChange(\"firstName\")}\n            required\n          />{\" \"}\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"last-name\"\n            label=\"last-name\"\n            placeholder=\"Last Name\"\n            variant=\"outlined\"\n            onChange={handleChange(\"lastName\")}\n            required\n          />{\" \"}\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <TextField\n            id=\"email\"\n            label=\"email\"\n            placeholder=\"Your Email\"\n            variant=\"outlined\"\n            onChange={handleChange(\"email\")}\n            required\n          />{\" \"}\n        </FormControl>\n        <FormControl className={classes.formControl}>\n        <Select\n            id=\"attending\"\n            value={state.attendeeData.attending[0]}\n            onChange={handleSelect('attending')}\n            defaultValue=\"select a talk to attend\"\n          >\n            {state.talks.map((talk) => {\nreturn <MenuItem key={talk._id} value={talk._id}>{talk.title}</MenuItem>\n            })}\n\n          </Select>\n        </FormControl>\n\n        <FormControl className={classes.formControl}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            type=\"submit\"\n          >\n            Add Attendee\n          </Button>\n        </FormControl>\n      </form>\n    </Box>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport { Tabs, Tab, Paper, Box, Typography } from '@material-ui/core';\nimport { AddTalk } from './add-talk.component';\nimport { Talks } from './talks.component';\nimport { AddAttendee } from './add-attendee.component';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    justifyContent: 'center'\n  },\n    root: {\n      padding: 20,\n      width: '50%',\n [theme.breakpoints.down(\"md\")]: {\n      width: \"100%\"\n    }\n    },\n    box: {\n      width: \"100%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"center\",\n      marginLeft: 20,\n      marginRight: 20\n    },\n    button: {\n      marginRight: 30\n    }\n\n\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <Box>\n        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"Talks\" id=\"talk\" />\n          <Tab label=\"Add Talk\" id=\"add-talk\" />\n          <Tab label=\"Add Attendee\" id=\"add-attendee\" />\n        </Tabs>\n      <TabPanel value={value} index={0}>\n        <Talks />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <AddTalk />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n       <AddAttendee />\n      </TabPanel>\n      </Box>\n    </Paper>\n  );\n}\n","import React from \"react\";\nimport { ThemeProvider, createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport { Toolbar, Grid } from \"@material-ui/core\";\nimport {\n  Root,\n  Header,\n  Content,\n  Footer,\n} from \"@mui-treasury/layout\";\nimport { Talks } from './components/talks.component';\nimport Dashboard from './components/dashboard.component'\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    background: theme.palette.primary.main,\n    color: '#f3f3f3'\n  },\n  grid: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n\n}));\nconst baseTheme = createMuiTheme();\nconst App = () => {\n  const classes = useStyles()\n  return (\n    <Root>\n      <Header className={classes.header}>\n        <Toolbar>Let's Talk Conference</Toolbar>\n      </Header>\n      <Content>\n        <Grid container className={classes.root} spacing={2}>\n          <Grid item xs={12} className={classes.grid}>\n            <Dashboard />\n          </Grid>\n\n        </Grid>\n      </Content>\n\n      <Footer>Powered by drtob</Footer>\n    </Root>\n  );\n};\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#f64c59',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n","const path = require('path');\n\nmodule.exports = {\n  PORT: 4000,\n  MONGODB_URL:\n  'mongodb+srv://drtob:1234drtob@!1234@cluster0-knnbd.gcp.mongodb.net/conference?retryWrites=true&w=majority',\n  REACT_API_URL: ''\n};\n"],"sourceRoot":""}